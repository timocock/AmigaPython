

                                PYTHON 2.3.3
                          NOTES ON THE AMIGA PORT

                             March 25, 2004.

                         Update to 2.3.3 by Tim Ocock
           Conversion and Amiga specific code by Irmen de Jong.
              (Original code by Guido van Rossum and others)

              http://www.monkeyhouse.eclipse.co.uk/amiga/python/
                      amiga@monkeyhouse.eclipse.co.uk

                   Read the file <DISCL_and_COPYRIGHT>!

   It contains the disclaimer for this software, and copyright notices.



	Contents:
	~~~~~~~~~

	1. What's new?
	2. General remarks.
	3. Troubleshooting.
	4. Thanks.


+----------------------+
|                      |
|  1. What's new?      |
|                      |
+----------------------+

This is another alpha (that means, not complete, not tested) Python version 2.3.3
(build 2 - further alpha/beta/final releases will be 2, 3, 4 etc.). See the notes
in Misc/NEWS for more information on what's new since the earlier versions of Python.

New in Alpha 2 is:
- XML support through expat
- zip (zlib) and bzip2 support
- socket module works!
- more complete posix module emulation, eliminating st_size bugs
- Compiled for 020, OS3.0+, no FPU, AmiTCP/Genesis
- amigapath module is complete (I think)

2.0 was the very last version released by Irmen. He has given me (Tim Ocock) his
permission to continue his work by updating it to the latest version of Python,
which at the time of writing is 2.3.3. Since I wanted to contribute something to
the Amiga community, and I seem to be one of the few people with SAS/C (I bought
one of the fabled last sets which didn't have a box or binders for the manuals)
this seemed like a fun project.

I would like to thank Irmen for doing the hard part of this port and allowing me
to use his work in continuing it.

Here's some FAQs:

- What system requirements does AmigaPython 2.3.3 alpha have?
I have compiled it to use OS3.0 memory pools functions, AmiTCP (Genesis)
networking and need a 68020 or greater. This alpha 2 shouldn't crash on FPU-less systems either now.

However, if you've got SAS/C you can take the source and compile it yourself, and
build a 68000 non-networked or INet225 version that will run on OS2.04+.

You'll need about 2MB of free memory to be on the safe side too.

- Will you support INet225 instead of AmiTCP/Genesis

I'd be surprised if anyone asks this, I'm sure no-ones using it. But aside from
the fact that I haven't updated the INet225 conditional code to 2.3.3, it's
probably possible.

FWIW, I used to love INet225, and only since OS3.9 came out is AmiTCP finally as
good, IMHO.

- How do I run it?

Make sure Python: is assigned to the home directory. Then type Python.

- How do I quit it?

type Ctrl-\

- I get an error about site.py when I run it. What's wrong?

Make sure Python: is pointing at this installation of Python.

- What bugs are known in this version?

See the website at http://www.monkeyhouse.eclipse.co.uk/amiga/python/ for Known Bugs.

- Why is there no installer script?

Everything for AmigaPython can live in this one directory, so it seems to me to be
overkill to have a complicated installer routine. If you've used Mac OS X
application bundles, you'll know what I mean when I say, it's better to drag an
application to a disk to install it, and delete the application (or it's drawer)
to uninstall it.

I know Irmen used an Installer, but I probably won't from now on.

- Can it be compiled with GCC?
The regular version of Python 2.3.3 compiled in a GeekGadgets environment, but
the automatic module compile doesn't work. Since even without the builtin modules
the exe was nearly 4MB, I decided not to bother for now. But I might consider
making a build of that sans AmigaPython add-ons.

- Is it true OS4 was going to include Python as an alternative to ARexx?
Apparently they thought about it. But I'd say it's better as a complement. Python
uses 10 times the resources of ARexx for a start, although memory is a lot
cheaper these days.

They can't have though too hard about it though. Fleecy reckoned it should be
part of some system wide language independent scripting host. But ARexx hosts
don't have to be used just by ARexx. AmigaPython supports them just fine, as does
Distributed Basic.

- Will there be an OS4 version?
If Hyperion or anyone else provide me with a machine running OS4 then I will be
happy to do it. They don't have my permission to use my parts of the code yet
though.

I'd also need to port it back to GCC for OS4. Not a big job, but it would help if
Hyperion would release their Amiga GCC developer kit wouldn't it! (also no reason
why that shouldn't be available for OS3.9 since it uses GCC which is free and
portable). I'm considering porting it to vbcc since that is more SAS-like but is available and free.

- Will Amiga changes be integrated into the Python mainline? Well they even have
conditional code for RISCOS in there, so why the hell not. Once I'm happy with the
quality of my changes, I will see about submitting them.

- Was it easy to port?
The Python code is really, really portable. Although this is achieved partly
through redundancy - why use an OS shared library when you can link your own
statically. There's also some horrible type changes, un-initialised variables
(even unused variables from older versions) and assumptions about the way
compilers deal with things like incomplete function declarations (never declare
() when you mean (void)!).

- What system was it developed on?

I used SAS/C 6.58 running on OS3.9.2 on WinUAE/AmigaForever.

- Why is the (alpha 1) version reporting 1st March 2004 when you said it was finished on
29th February?

Seems SAS/C's AMIGADATE macro doesn't like leap years! Do you think they'll fix
that for me?

- Where can I download updates?
For now, go to http://www.monkeyhouse.eclipse.co.uk/amiga/python/

- How do I contact you?

Post a message on the Python support thread at http://www.amigaworld.net/

- Is it free?
AmigaPython 2.3.3 is free to use and distribute, but please ask my permission
first before including it on any CDs or websites. I will be supporting it for the
foreseeable future. If you want to use my source code changes, then please ask
permission first. I'm sure we can come to some kind of arrangement.

Please consider making a donation on my website, sending me registered versions
of your own Amiga applications, and supporting other great Amiga software.

+----------------------+
|                      |
|  2. General remarks  |
|                      |
+----------------------+

(N.B. the following hasn't yet been updated from Irmen's original documentation,
but I've deleted Irmen's email address so he doesn't get support requests that
should come to me)

* The MAIN PYTHON SITE is <http://www.python.org>. All general documentation
  can be obtained from here (Python tutorial, language reference, library
  reference and much more).

* The AmigaPython homepage is at http://www.monkeyhouse.eclipse.co.uk/amiga/python/
  (note the new address!). Check it out for news, future plans, bugs etc.

* In the `Docs/Amiga' directory you can find the docs for the Amiga specific
  modules and features. Read them, they contain vital information!

* The Python library contains an extensive test set.
  To try it yourself, type (after installation):
	Python -c "import test.autotest" (and have patience...)
	Python -c "import test.autotest" (and have patience...)
  (Yes: do it TWICE because the generated .pyc files need to be checked too).
  (You can also start the RunTest.py script from the Workbench).
  Some tests cannot run on the Amiga - they will be skipped.
  The report at the end should say something like:
	31 tests OK.
	18 tests skipped:  .....
  If you don't start AmiTCP first, test_socket and test_select will fail.
  If usergroup.library cannot be opened, crypt, grp and pwd will fail.

* To  see  some  command  line  options,  use  the -?  option, or any other
  unrecognised option.

* To run a speed benchmark, type:
	Python -c "import test.pystone; test.pystone.main()"
  and have some patience. On my system, I get 355 pystones/second.

* In the `Icons' directory there are some icon suggestions.
  def_py.info is an icon for Python source files (.py)
  def_pyc.info is an icon for Pytnon bytecode files (.pyc)

* Mail  me  if  you encounter any Amiga specific problems, or if you have any
  Amiga  related  questions  about  Python,  or  just  for fun.  General
  questions are better asked on the usenet newsgroup comp.lang.python.  A lot
  of   information,   including  an  online  manual,  can  be  obtained  from
  <http://www.python.org/>. Read the FAQ before asking!


+-----------------------+
|                       |
|  3. Troubleshooting   |
|                       |
+-----------------------+

* When  I  try  to  install  Python,  I  get  "Unable  to  open  your tool
  'installer'"!

  The Installer® utility is required for installation, but it is not included
  in  the  archive.   Get  it  from  somewhere  else  and  copy it to your C:
  directory or somewhere where Workbench can find it.

* When I start python, I get "This program requires a math co-processor"!

  You should upgrade your computer to at least a 68030 with a FPU.

(Not needed in 2.3.3 alpha 2+)

* I   get   "Couldn't   open   bsdsocket.library"   or   "Couldn't   open
  usergroup.library" errors!

  You  are  trying to use functions that need one of these libraries.  AmiTCP
  is required if you want to use all (network) functions.

* Python crashes when executing complex (recursive) code!

  This should not happen; you should get a MemoryError exception.  If it does
  crash, increase your stack size and try again.  Python's default stack size
  is 40K, which should be enough for most programs.

* Functions which use the PIPE: device (like os.popen) seem to work
  incorrectly!

  The default l:queue-handler is buggy.  Make sure you have installed a fixed
  l:queue-handler (I'm using util/sys/HWGQueue.lha from Aminet)


+-----------------------+
|                       |
|  4. Thanks            |
|                       |
+-----------------------+

Of course this product could never have happened without the support of various
people. Amongst others I'd like to thank:

Irmen de Jong - who did the hard work
Guido van Rossum - for creating Python in the first place
Mike Meyer for his various suggestions and problem reports
Kent Polk for his various suggestions and problem reports
Lyster E. Wick for his various contributions (NewIcons/ARexx/WB/bugreports)
Marc Christiansen for his detailed description of the strftime and
  amiga.crc32 problems (and persuading me to fix them)
Bablos to make me start polishing up the embedded python code.
Adam Chodorowski for a few new doslib functions.

And ofcourse thanks to my friends who supported me in the first phase of
this project and pushed me to continue this work (that was LONG ago, in the
Python 1.2 days).

If you think your name is missing here, drop me a line!

To every AmigaPython user out there: thanks for your interest!






